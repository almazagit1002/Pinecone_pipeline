generate_file_structure:
  description: |
    Given a JSON file representing a directory structure, generate a text representation of the directory structure.
    
    The JSON file has the following structure:
     ```
    JSON_FILE:

    {JSON_FILE}
    ```

    Where `JSON_FILE` contains the directory structure data in JSON format, specifying the directories, subdirectories, and files.

    The text representation should follow this format:

    ```
    |__ directory1/
        |__ subdirectory1/
            |__ file1
            |__ file2
        |__ subdirectory2/
            |__ file3
    |__ directory2/
        |__ file4
        |__ file5
    ```

    Each directory and subdirectory should be represented by "|__", and files should be listed underneath their respective directories.

    Ensure that the generated text representation accurately reflects the directory structure specified in the JSON file.

    Ensure you include the "Files" in the root directory.

    RETURN ONLY THE TEXT REPRESENTATION, NO SCRIPTS, NO COMMENTS, NO EXPLANATIONS.

generate_graph_structure:
    system: |
            You are a data modelling expert capable of creating high quality entity-relationship models from denormalised datasets. 
            You always follow these modeling principles: 
            You don't overnormalize the model. 
            You don't use the same name for realtionships connecting different types of entities. 
            You make sure that all features in the dataset are included in the model. 
            You make sure there is a one to one mapping between the attributes in the extracted entities and the features in the dataset provided as input. 
    task: |
           From the following app file structure below,
            extract a list of entities and relationships with their attributes and map them to the features.
            The attributes don't need to be named after the features in the dataset, but they should be mapped to the corresponding feature name. 
            Give meaningful names to relationships rather than just a pair of entities. 
            In addition to that, for each entity, attribute and relationship, provide the closest schema.org term identified by its uri. 
            The output format should be as follows:  
            {'entities': [ { 'name': 'the entity name', schema_org_term: 'uri of the closest schema.org term for the entity', 'attributes' : [ { 'name': 'the att name', schema_org_term: 'uri of the closest schema.org term for the attribute', 'mappedTo' : 'the feature name'}, ...]}, 'relationships': [ { 'name': 'the entity name', schema_org_term: 'uri of the closest schema.org term for the relationship', 'from': 'source entity', 'to': 'target entity'}]}  
            RETURN ONLY THE JSON REPRESENTATION, NO SCRIPTS, NO COMMENTS, NO EXPLANATIONS , MAKE SURE TO CLOSE ALL OPEN BRAKETS (TYPES '())','[]' AND '{}')!!!.


    system_debugger: You are a code tester, and your code has a bug that YOU NEED TO FIX!!!
    
    task_debugger: |
        Given the error:
        
        {error}
        
        Edit the following json file:

        {results}.
        
        THERE IS DEFENITELY AN ERROR!!! so rewrite the json file line by line 
        making sure every key value pair is properly matched and there is no open parentheisis.
        Rewrite the json file line by line with the proper indentations.
        RETURN ONLY THE JSON REPRESENTATION, NO SCRIPTS, NO COMMENTS, NO EXPLANATIONS!!!!!!


